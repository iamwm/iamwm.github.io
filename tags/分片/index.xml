<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分片 on 搬砖工的日常</title>
    <link>https://rgozi.com/tags/%E5%88%86%E7%89%87/</link>
    <description>Recent content in 分片 on 搬砖工的日常</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 11 Sep 2021 09:27:12 +0000</lastBuildDate><atom:link href="https://rgozi.com/tags/%E5%88%86%E7%89%87/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>分区</title>
      <link>https://rgozi.com/post/%E5%88%86%E5%8C%BA/</link>
      <pubDate>Sat, 11 Sep 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E5%88%86%E5%8C%BA/</guid>
      <description>&lt;p&gt;对于非常大的数据集，或者非常高的吞吐量，仅仅通过复制是无法满足需求的。我们需要对数据进行分区（partion）。&lt;/p&gt;
&lt;p&gt;在MongoDB，Elasticsearch和Solr Cloud中被称为&lt;strong&gt;分片（shard）&lt;/strong&gt;，在HBase中称之为区域（Region），Bigtable中则是&lt;strong&gt;表块（tablet）&lt;/strong&gt;，Cassandra和Riak中是&lt;strong&gt;虚节点（vnode)&lt;/strong&gt;，Couchbase中叫做&lt;strong&gt;虚桶（vBucket）&lt;/strong&gt;。但是&lt;strong&gt;分区（partitioning）&lt;/strong&gt; 是最约定俗成的叫法。&lt;/p&gt;
&lt;p&gt;分区主要是为了系统的&lt;strong&gt;可伸缩性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;分区常常与复制结合使用，使得每个分区的数据存储在多个副本节点中。在保证系统可伸缩的同时，保证系统的高可用。我们在设计系统分区的时候通常需要同时考虑如何将系统的整体&lt;strong&gt;读写负载&lt;/strong&gt;按照预期分配到各个分区。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
