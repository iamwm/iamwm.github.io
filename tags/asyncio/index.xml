<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>asyncio on 搬砖工的日常</title>
    <link>https://rgozi.com/tags/asyncio/</link>
    <description>Recent content in asyncio on 搬砖工的日常</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 01 Jul 2021 09:27:12 +0000</lastBuildDate><atom:link href="https://rgozi.com/tags/asyncio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>asyncio loop的运行循环</title>
      <link>https://rgozi.com/post/11-asyncio-loop%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Thu, 01 Jul 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/11-asyncio-loop%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/</guid>
      <description>&lt;p&gt;通过&lt;code&gt;run_forever&lt;/code&gt;或&lt;code&gt;run_until_complete&lt;/code&gt;方法可以让我们完成初始化的loop &lt;strong&gt;run&lt;/strong&gt;起来。&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;run_until_complete&lt;/code&gt;是将需要执行的函数&amp;quot;Task&amp;quot;化之后再调用&lt;code&gt;run_forever&lt;/code&gt;，而&lt;code&gt;run_forever&lt;/code&gt;真正将loop **&lt;!-- raw HTML omitted --&gt;loop&lt;!-- raw HTML omitted --&gt;**起来是通过&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_run_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_stopping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;来实现的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>asyncio default loop 初始化流程(基于python3.6)</title>
      <link>https://rgozi.com/post/10-asyncio-loop%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Fri, 01 Jan 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/10-asyncio-loop%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;p&gt;通过简单的代码，就可以一窥asyncio event loop的初始化流程：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;asyncio&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;loop&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asyncio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_event_loop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;loop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run_forever&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上边简单的几行代码，牵涉到event loop的初始化以及运行的全部过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>asyncio的前世今生</title>
      <link>https://rgozi.com/post/1asyncio%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</link>
      <pubDate>Wed, 01 Jul 2020 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/1asyncio%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</guid>
      <description>&lt;p&gt;在提到python的asyncio的时候，我们会联想到async/await，event loop，coroutine，selector，Task，Future等等相关的内容，那么asyncio到底是谁(asyncio本身)，它从哪里来的(为什么需要asyncio)，要到哪里去(它能够解决什么问题)呢？&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
