<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>搬砖工的日常</title>
    <link>https://rgozi.com/</link>
    <description>Recent content on 搬砖工的日常</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 13 Feb 2022 09:27:12 +0000</lastBuildDate><atom:link href="https://rgozi.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>事务</title>
      <link>https://rgozi.com/post/%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Sun, 13 Feb 2022 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E4%BA%8B%E5%8A%A1/</guid>
      <description>&lt;p&gt;在系统运行过程中，可能随时随地都会发生意外中断：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库软件或硬件故障&lt;/li&gt;
&lt;li&gt;应用程序崩溃&lt;/li&gt;
&lt;li&gt;网络连接断开&lt;/li&gt;
&lt;li&gt;数据库并发读写&lt;/li&gt;
&lt;li&gt;应用程序竞态条件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了实现可靠性，整个系统必须处理这些故障，但是实现相对完备的容错机制工作量巨大。**事务（transaction）**一直是简化问题的首选机制。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>分区</title>
      <link>https://rgozi.com/post/%E5%88%86%E5%8C%BA/</link>
      <pubDate>Sat, 11 Sep 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E5%88%86%E5%8C%BA/</guid>
      <description>&lt;p&gt;对于非常大的数据集，或者非常高的吞吐量，仅仅通过复制是无法满足需求的。我们需要对数据进行分区（partion）。&lt;/p&gt;
&lt;p&gt;在MongoDB，Elasticsearch和Solr Cloud中被称为&lt;strong&gt;分片（shard）&lt;/strong&gt;，在HBase中称之为区域（Region），Bigtable中则是&lt;strong&gt;表块（tablet）&lt;/strong&gt;，Cassandra和Riak中是&lt;strong&gt;虚节点（vnode)&lt;/strong&gt;，Couchbase中叫做&lt;strong&gt;虚桶（vBucket）&lt;/strong&gt;。但是&lt;strong&gt;分区（partitioning）&lt;/strong&gt; 是最约定俗成的叫法。&lt;/p&gt;
&lt;p&gt;分区主要是为了系统的&lt;strong&gt;可伸缩性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;分区常常与复制结合使用，使得每个分区的数据存储在多个副本节点中。在保证系统可伸缩的同时，保证系统的高可用。我们在设计系统分区的时候通常需要同时考虑如何将系统的整体&lt;strong&gt;读写负载&lt;/strong&gt;按照预期分配到各个分区。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记另一例mongo can not add session to cache</title>
      <link>https://rgozi.com/post/%E8%AE%B0%E5%8F%A6%E4%B8%80%E4%BE%8Bmongo-can-not-add-session-to-cache/</link>
      <pubDate>Tue, 10 Aug 2021 21:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E8%AE%B0%E5%8F%A6%E4%B8%80%E4%BE%8Bmongo-can-not-add-session-to-cache/</guid>
      <description>&lt;p&gt;线上环境又报：&lt;strong&gt;mongo can not add session to cache&lt;/strong&gt;，有了&lt;a href=&#34;https://rgozi.com/post/mongo-can-not-add-session-to-cache-%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E5%92%8C%E8%A7%A3%E5%86%B3/&#34;&gt;之前的经验&lt;/a&gt;，这次排查和解决问题算是轻车熟路了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>复制</title>
      <link>https://rgozi.com/post/%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Sat, 24 Jul 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E5%A4%8D%E5%88%B6/</guid>
      <description>&lt;p&gt;复制指的是在通过网络连接的&lt;strong&gt;多台机器&lt;/strong&gt;上保留&lt;strong&gt;相同数据&lt;/strong&gt;的副本。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>asyncio loop的运行循环</title>
      <link>https://rgozi.com/post/11-asyncio-loop%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Thu, 01 Jul 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/11-asyncio-loop%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/</guid>
      <description>&lt;p&gt;通过&lt;code&gt;run_forever&lt;/code&gt;或&lt;code&gt;run_until_complete&lt;/code&gt;方法可以让我们完成初始化的loop &lt;strong&gt;run&lt;/strong&gt;起来。&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;run_until_complete&lt;/code&gt;是将需要执行的函数&amp;quot;Task&amp;quot;化之后再调用&lt;code&gt;run_forever&lt;/code&gt;，而&lt;code&gt;run_forever&lt;/code&gt;真正将loop **&lt;!-- raw HTML omitted --&gt;loop&lt;!-- raw HTML omitted --&gt;**起来是通过&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_run_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_stopping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;来实现的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据的存储与检索</title>
      <link>https://rgozi.com/post/%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AD%98%E5%82%A8%E4%B8%8E%E6%A3%80%E7%B4%A2/</link>
      <pubDate>Sat, 05 Jun 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AD%98%E5%82%A8%E4%B8%8E%E6%A3%80%E7%B4%A2/</guid>
      <description>&lt;p&gt;对于一个数据库来说，它要完成最基础的两件事情：当你把数据交给数据库时，它负责将其存储起来；当你需要数据时，数据库能够将指定数据检索并返回给你，即&lt;strong&gt;数据存储与检索&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;从数据库的视角来说，上边的两件事情一般会交给底层数据库&lt;strong&gt;存储引擎&lt;/strong&gt;来完成。对于开发人员来说，选择一个合适的存储引擎能够为后续系统的建设非常重要。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据模型与查询</title>
      <link>https://rgozi.com/post/%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B%E4%B8%8E%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Sat, 15 May 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B%E4%B8%8E%E6%9F%A5%E8%AF%A2/</guid>
      <description>&lt;p&gt;对于应用程序开发人员来说，我们的编码过程很多场景下都是对现实世界的代码描述。这个描述过程可以理解为数据模型的构建过程。数据模型不仅影响着代码的编写方式（面向对象、函数式编程等等），它也会影响我们后续解决问题的思路。&lt;/p&gt;
&lt;p&gt;在计算机系统中，我们常常通过构建层级结构来解构整个系统（例如计算机存储器的层级结构），一个复杂的应用程序往往会有多个中间层次，每个层次都提供一个明确的数据模型来隐藏更低层次中的复杂性。这些抽象出来的数据模型能够为构建整个系统的不同角色提供有效协作的基础。&lt;/p&gt;
&lt;p&gt;常见和常用的数据模型，可以抽象为几大类：关系模型、文档模型和图数据模型。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>异常控制流</title>
      <link>https://rgozi.com/post/%E5%BC%82%E5%B8%B8%E6%8E%A7%E5%88%B6%E6%B5%81/</link>
      <pubDate>Sat, 17 Apr 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E5%BC%82%E5%B8%B8%E6%8E%A7%E5%88%B6%E6%B5%81/</guid>
      <description>&lt;p&gt;这部分内容相当重要，这部分我们可以学习到应用是如何与操作系统交互的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>代码如何在系统中运行</title>
      <link>https://rgozi.com/post/%E4%BB%A3%E7%A0%81%E5%A6%82%E4%BD%95%E5%9C%A8%E7%B3%BB%E7%BB%9F%E4%B8%AD%E8%BF%90%E8%A1%8C/</link>
      <pubDate>Sun, 07 Mar 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E4%BB%A3%E7%A0%81%E5%A6%82%E4%BD%95%E5%9C%A8%E7%B3%BB%E7%BB%9F%E4%B8%AD%E8%BF%90%E8%A1%8C/</guid>
      <description>&lt;p&gt;我们平常所编写的代码，无论是c代码、go代码、rust代码或其他代码，大都是以文本文件的形式存储在计算机硬盘上。以最简单的&lt;code&gt;hello_world&lt;/code&gt;程序为例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hello world&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>asyncio default loop 初始化流程(基于python3.6)</title>
      <link>https://rgozi.com/post/10-asyncio-loop%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Fri, 01 Jan 2021 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/10-asyncio-loop%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;p&gt;通过简单的代码，就可以一窥asyncio event loop的初始化流程：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;asyncio&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;loop&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asyncio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_event_loop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;loop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run_forever&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上边简单的几行代码，牵涉到event loop的初始化以及运行的全部过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mongo can not add session to cache问题排查和解决</title>
      <link>https://rgozi.com/post/mongo-can-not-add-session-to-cache-%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E5%92%8C%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Sun, 19 Jul 2020 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/mongo-can-not-add-session-to-cache-%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E5%92%8C%E8%A7%A3%E5%86%B3/</guid>
      <description>最近我们的线上mongo集群发生了一次事故，主要原因是后台应用在进行mongo读写的时候报错，错误描述是pymongo.errors.Ope</description>
    </item>
    
    <item>
      <title>asyncio的前世今生</title>
      <link>https://rgozi.com/post/1asyncio%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</link>
      <pubDate>Wed, 01 Jul 2020 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/1asyncio%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</guid>
      <description>&lt;p&gt;在提到python的asyncio的时候，我们会联想到async/await，event loop，coroutine，selector，Task，Future等等相关的内容，那么asyncio到底是谁(asyncio本身)，它从哪里来的(为什么需要asyncio)，要到哪里去(它能够解决什么问题)呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>近期的想法和规划</title>
      <link>https://rgozi.com/post/%E8%BF%91%E6%9C%9F%E7%9A%84%E6%83%B3%E6%B3%95%E5%92%8C%E8%A7%84%E5%88%92/</link>
      <pubDate>Tue, 07 Apr 2020 16:33:10 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E8%BF%91%E6%9C%9F%E7%9A%84%E6%83%B3%E6%B3%95%E5%92%8C%E8%A7%84%E5%88%92/</guid>
      <description>&lt;p&gt;时隔两年，重新开始更新博客，不禁感叹一句时间过得太快了。这两年时间里，自己在生活、学习方方面面都有很大改变。放缓脚步，静心思考，结合当前的状态，对过去两年的成长做好总结，对未来一段时间的发展做好规划，也是非常必须的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>开发常用各种源设置</title>
      <link>https://rgozi.com/post/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%90%84%E7%A7%8D%E6%BA%90%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Thu, 01 Mar 2018 13:45:39 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%90%84%E7%A7%8D%E6%BA%90%E8%AE%BE%E7%BD%AE/</guid>
      <description>&lt;p&gt;在日常开发过程中，经常会受到国内网络环境限制导致类似：apt install大半天、brew install卡条、npm install一直转圈等诸多蛋疼的事情。
恰好我最近重装了笔记本操作系统，也记录一下我在开发过程中需要设置国内源改善开发环境的过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>react&#43;cesium开发小结</title>
      <link>https://rgozi.com/post/react&#43;cesium%E5%BC%80%E5%8F%91%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Fri, 23 Feb 2018 13:45:39 +0000</pubDate>
      
      <guid>https://rgozi.com/post/react&#43;cesium%E5%BC%80%E5%8F%91%E5%B0%8F%E7%BB%93/</guid>
      <description>&lt;p&gt;从一月份开始，主要在做cesium的开发，和之前不同的是这次是在react框架的基础上进行开发的😄&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2017小结</title>
      <link>https://rgozi.com/post/2017%E6%8A%80%E6%9C%AF%E6%88%90%E9%95%BF%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Tue, 09 Jan 2018 13:45:39 +0000</pubDate>
      
      <guid>https://rgozi.com/post/2017%E6%8A%80%E6%9C%AF%E6%88%90%E9%95%BF%E5%B0%8F%E7%BB%93/</guid>
      <description>&lt;p&gt;今天写完年度工作总结之后，才想起快有两个多月没有更新博客了，主要是因为从十月末开始，我的生活和工作环境都有比较大的变动，索性来一篇所谓的年度小结来概括一下2017这一整年值得纪念的点点滴滴。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>前端项目的自动化测试和部署初试</title>
      <link>https://rgozi.com/post/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%92%8C%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Fri, 17 Nov 2017 22:41:24 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%92%8C%E9%83%A8%E7%BD%B2/</guid>
      <description>&lt;p&gt;项目的正常运行离不开完备的测试和正确的部署。通常在项目开发的过程中，我们会写出不同类型的测试从而最大程度的减少bug查找修复时间、降低项目重构成本、增加项目迭代过程中对代码质量的信心，保证项目正常上线。为了能够给用户呈现最新的项目开发成果，一次次手动拷贝代码、登陆远程主机、配置代码运行环境显然比较低效。所以，自动化测试和部署能够有效提升项目开发效率。
这篇博客也是总结一下我最近在开发的一个前端项目中使用&lt;!-- raw HTML omitted --&gt;jenkins+gitlab&lt;!-- raw HTML omitted --&gt;进行自动化测试和部署的过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用docker安装jenkins</title>
      <link>https://rgozi.com/post/%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85jenkins/</link>
      <pubDate>Thu, 09 Nov 2017 13:45:39 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85jenkins/</guid>
      <description>&lt;p&gt;最近在学习jenkins相关的东西，想在自己电脑上安装一套jenkins环境，发现可以通过docker来完成这个任务，下面主要记录一下安装过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>离线环境python项目的部署</title>
      <link>https://rgozi.com/post/%E7%A6%BB%E7%BA%BF%E7%8E%AF%E5%A2%83python%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Tue, 24 Oct 2017 15:27:54 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E7%A6%BB%E7%BA%BF%E7%8E%AF%E5%A2%83python%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%83%A8%E7%BD%B2/</guid>
      <description>&lt;p&gt;最近自己参与的一个项目接近尾声，需要把代码部署到甲方提供的服务器。本来想着没有什么困难，谁知道甲方提供的服务器需要连接到vpn堡垒机之后才能连接，并且服务器是不能与外网直接连接的。知道真相的我眼泪掉下来。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在vultr上搭建shadowsocks</title>
      <link>https://rgozi.com/post/%E5%9C%A8vultr%E4%B8%8A%E6%90%AD%E5%BB%BAshadowsock/</link>
      <pubDate>Fri, 13 Oct 2017 22:41:24 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E5%9C%A8vultr%E4%B8%8A%E6%90%AD%E5%BB%BAshadowsock/</guid>
      <description>&lt;p&gt;为啥突然想要自己搭一个shadowsocks呢，事情的起因是这样的：&lt;a href=&#34;https://github.com/getlantern/forum&#34;&gt;蓝灯&lt;/a&gt;这个项目在&lt;a href=&#34;https://github.com/trending&#34;&gt;git trending&lt;/a&gt;上连续上榜多日，看了评论发现原来这个东西是个vpn，很多人用来当梯子。因为最近种种原因这个梯子现在用不成了，所以很多用户跑来吐槽。我一直比较懒，都是直接买的现成的vpn，现在一直在用这个官网经常上不去的&lt;a href=&#34;https://netfits.net.cn/&#34;&gt;netfits&lt;/a&gt;，总体感觉还行，就是价格有点贵，所以趁着这个十一长假之后的第一个周五下午来搞点事情，搭一个自己的ss服务器。
&lt;img src=&#34;https://rgozi.com/pics/lantern.png&#34; alt=&#34;lantern.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mongodb使用总结</title>
      <link>https://rgozi.com/post/mongodb%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 18 Sep 2017 17:03:05 +0000</pubDate>
      
      <guid>https://rgozi.com/post/mongodb%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;本想上周末写好这篇总结的，无奈一起开黑的时间总是过得很快，就偷了个懒，并且还学了个新菜：西红柿牛腩.jpg。所以就把总结的事情放到今天来了。
初次接触mongodb还是在研一刚入学的时候，那时候接触的东西少，很多概念都不清楚，到现在差不多已经有三年了，所以总结一下我用mongodb做了哪些事情还是比较有意义的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>proxy在爬虫中的使用姿势</title>
      <link>https://rgozi.com/post/proxy%E5%9C%A8%E7%88%AC%E8%99%AB%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/</link>
      <pubDate>Mon, 28 Aug 2017 13:23:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/proxy%E5%9C%A8%E7%88%AC%E8%99%AB%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/</guid>
      <description>&lt;p&gt;通过爬虫获取数据会经常被服务器ban掉ip，所以有个有效的proxy pool十分必要。这几天在爬网易云音乐的用户数据，顺便搞了个&lt;a href=&#34;https://github.com/love3forever/proxyHunter&#34;&gt;proxyhunter&lt;/a&gt;，并且尝试发布成pip包：&lt;a href=&#34;https://pypi.python.org/pypi/proxyhunter/0.0.1&#34;&gt;proxyhunter&lt;/a&gt;，方便以后的使用。下面主要说下&lt;!-- raw HTML omitted --&gt;requests&lt;!-- raw HTML omitted --&gt;在进行请求的时候，proxy如何设置，以及我这个proxyhunter如何使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python魔术方法指南[转]</title>
      <link>https://rgozi.com/post/python%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%E6%8C%87%E5%8D%97/</link>
      <pubDate>Tue, 22 Aug 2017 09:23:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/python%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;p&gt;转自&lt;a href=&#34;http://pycoders-weekly-chinese.readthedocs.io/en/latest/issue6/a-guide-to-pythons-magic-methods.html&#34;&gt;Python 魔术方法指南&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>对象引用、可变性[流畅的Python]</title>
      <link>https://rgozi.com/post/fluent_python_chapter8/</link>
      <pubDate>Sun, 20 Aug 2017 23:23:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/fluent_python_chapter8/</guid>
      <description>&lt;p&gt;记录一下在读《流程的python》时对自己有用的知识点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Iterables,Iterators和Generators</title>
      <link>https://rgozi.com/post/iterablesiterators%E5%92%8Cgenerators/</link>
      <pubDate>Thu, 10 Aug 2017 19:23:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/iterablesiterators%E5%92%8Cgenerators/</guid>
      <description>&lt;p&gt;最近一段时间都在研究python里边的一些概念:&lt;!-- raw HTML omitted --&gt;iterator,iterable和generator&lt;!-- raw HTML omitted --&gt;.看到&lt;a href=&#34;http://nvie.com/posts/iterators-vs-generators/&#34;&gt;这篇文章&lt;/a&gt;写的十分不错,基本上讲清楚了这三个东西都是什么以及他们之间的关系.这当然值得记录一下😊.
所谓一图胜千言,这篇文章中的这个关系图让人一目了然.
&lt;img src=&#34;https://rgozi.com/pics/relationships.png&#34; alt=&#34;relationships.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python的itertools[读文档]</title>
      <link>https://rgozi.com/post/python%E7%9A%84itertools/</link>
      <pubDate>Wed, 09 Aug 2017 19:23:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/python%E7%9A%84itertools/</guid>
      <description>&lt;p&gt;python的itertools库受到了来自APL, Haskell和SML的灵感，并且用最适合python语言特性的形式重构。它差不多可以说是定义了一套高效、节省内存的方法使用纯python来构建开发者所需要的各种不同迭代器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python中@classmethod和@staticmethod的理解</title>
      <link>https://rgozi.com/post/%E5%85%B3%E4%BA%8Epython%E7%9A%84classmethod%E5%92%8Cstaticmethod%E7%9A%84%E7%90%86%E8%A7%A3/</link>
      <pubDate>Thu, 03 Aug 2017 11:31:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E5%85%B3%E4%BA%8Epython%E7%9A%84classmethod%E5%92%8Cstaticmethod%E7%9A%84%E7%90%86%E8%A7%A3/</guid>
      <description>&lt;p&gt;一直对python中@classmethod和@staticmethod的用法和区别不是很理解,一顿google之后发现还是stackoverflow真的是程序员的好朋友.在这个问题&lt;a href=&#34;https://stackoverflow.com/questions/12179271/meaning-of-classmethod-and-staticmethod-for-beginner&#34;&gt;Meaning of @classmethod and @staticmethod for beginner?&lt;/a&gt;中,几个大神的回答还是很好的.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>celery和fabric的使用</title>
      <link>https://rgozi.com/post/celery%E5%92%8Cfabric%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 19 Jul 2017 14:05:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/celery%E5%92%8Cfabric%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;很早就听说&lt;a href=&#34;http://www.celeryproject.org/&#34;&gt;celery&lt;/a&gt;和&lt;a href=&#34;http://www.fabfile.org/&#34;&gt;fabric&lt;/a&gt;这两个神器,最近同时在做两个自己的小项目，更新比较频繁，一遍一遍手动部署太过僵硬，所以才真正用到了这俩好东西。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>近期的一些总结</title>
      <link>https://rgozi.com/post/%E6%9C%80%E8%BF%91%E5%85%B3%E4%BA%8Epython%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 09 Jul 2017 12:38:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E6%9C%80%E8%BF%91%E5%85%B3%E4%BA%8Epython%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;昨天看到自己手机上wunderlist上的提示“精通python”，任务是去年同一时间建立的。那时候我才刚刚毕业，还没去单位报道，在家里找了个练手项目，逐步学习python相关的东西：爬虫、web框架、机器学习等各方面，那时候想着要是用一年的时间好好来学，应该可以达到精通的程度了。
现在回过头来看，虽然没有达到自己预想的“精通”，但这一年还算充实，至少不是虚度时光，单是针对python相关的东西，自己也是从方方面面用了不少时间来学习、练习、思考。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cesium-terrain-builder在windows下的编译</title>
      <link>https://rgozi.com/post/cesium-terrain-builder%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91/</link>
      <pubDate>Fri, 30 Jun 2017 17:10:30 +0000</pubDate>
      
      <guid>https://rgozi.com/post/cesium-terrain-builder%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91/</guid>
      <description>&lt;p&gt;最近在研究cesium，发现cesium 用的地形数据跟osgEarth的还不太一样，他们采用&lt;a href=&#34;https://github.com/AnalyticalGraphicsInc/quantized-mesh&#34;&gt;quantized-mesh&lt;/a&gt;这个数据格式，之前在osgEarth上用的地形瓦片在cesium上用不了，让人比较恼火。好在github上有人已经实现了从tif格式的dem数据转到.terrain格式的工具:&lt;a href=&#34;https://github.com/homme/cesium-terrain-builder&#34;&gt;cesium-terrain-builder&lt;/a&gt;，不过该项目在windows下编译让人比较难受，所以纪录一下整个过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>requests库的Failed to establish a new connection</title>
      <link>https://rgozi.com/post/requests%E5%BA%93error/</link>
      <pubDate>Sun, 29 Jan 2017 11:11:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/requests%E5%BA%93error/</guid>
      <description>&lt;p&gt;使用python做爬虫的过程中，经常会在较短的时间内构建大量的连接向服务器请求数据，遇到了这样的问题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;requests.exceptions.ConnectionError: HTTPConnectionPool(host=&amp;#39;xxx&amp;#39;, port=80):
Max retries exceeded with url: /document/record/_search?pretty=true (Caused by NewConnectionError
(&amp;#39;&amp;lt;requests.packages.urllib3.connection.HTTPConnection object at 0x7f544af9a5d0&amp;gt;: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution&amp;#39;,))
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>mongodb用户名密码登录</title>
      <link>https://rgozi.com/post/mongodb%E5%B8%A6%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 17 Jan 2017 11:11:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/mongodb%E5%B8%A6%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;写这篇博客是为了纪念最近闹的沸沸扬扬的大规模mongodb库被黑的事件，我自己也不幸中招，索性被黑的数据都是自己做试验的一些数据，并不是很重要。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flask-socketio的一次使用记录</title>
      <link>https://rgozi.com/post/flask-socketio%E7%9A%84%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8%E7%BB%8F%E5%8E%86/</link>
      <pubDate>Wed, 28 Dec 2016 16:11:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/flask-socketio%E7%9A%84%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8%E7%BB%8F%E5%8E%86/</guid>
      <description>&lt;p&gt;最近在做一个小项目，其中一部分即时通信的功能我是通过flask-socketio来完成的后端代码编写。在尝试过程中遇到了一些问题，特在此记录，以备后用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flask几种部署方式实践</title>
      <link>https://rgozi.com/post/flask%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Mon, 12 Dec 2016 15:32:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/flask%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;p&gt;flask作为一款轻量级web框架，具有诸多优点。我喜欢它的原因是它具有高度的可扩展性，广泛的各类插件，丰富的开发文档。在开发调试过程中，我们往往会简单的使用flask自带的web服务器。但是在实际的生产环境中，flask自带的web服务器很难满足需求。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何让你的代码更加pythonic</title>
      <link>https://rgozi.com/post/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E6%9B%B4%E5%8A%A0pythonic/</link>
      <pubDate>Mon, 28 Nov 2016 14:09:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E6%9B%B4%E5%8A%A0pythonic/</guid>
      <description>&lt;p&gt;对于开发者而言，代码风格是一件很重要的事情，它往往会关系到你代码的可读性甚至是执行效率。对于python而言，经常会在招聘要求中有一条：&lt;!-- raw HTML omitted --&gt;pythonic的代码&lt;!-- raw HTML omitted --&gt;。那究竟什么是pythonic，什么样的代码才是pythonic的代码，我自己也一直有让自己的代码更加pythonic，总结平时的工作学习就有了如下这些。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>读Mongodb权威指南有感</title>
      <link>https://rgozi.com/post/%E8%AF%BBmongodb%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E6%9C%89%E6%84%9F/</link>
      <pubDate>Fri, 25 Nov 2016 11:50:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E8%AF%BBmongodb%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E6%9C%89%E6%84%9F/</guid>
      <description>&lt;p&gt;由于之前从图书馆借的书已经到期了，前天下午趁着好天气去图书馆了一趟，顺便借回来两本&lt;a href=&#34;https://book.douban.com/subject/25798102/&#34;&gt;《Mongodb权威指南》&lt;/a&gt;和&lt;a href=&#34;https://book.douban.com/subject/25856314/&#34;&gt;《Web性能权威指南》&lt;/a&gt;。没想到两天时间就把前边那本看完了。总体感觉还不错，这本书写的比较细致，很适合入门学习，同时在看书的过程中，我发现了之前没有主要到的一些知识点，并且改变了我之前的一些错误认识，所以还是很有必要记录一下的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mongodb Aggregation Pipleline</title>
      <link>https://rgozi.com/post/mongodb_aggregation/</link>
      <pubDate>Wed, 23 Nov 2016 09:27:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/mongodb_aggregation/</guid>
      <description>&lt;p&gt;Mongodb作为目前最流行的nosql数据库之一，它给我们提供了海量数据的管理能力。而现在正处于大数据最为火热的时代，如何将海量的数据转化为可用的信息，这一步至关重要，面向应用而设计的mongodb在基础的数据分析上提供了aggregation这一功能，足以满足很多日常需求。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>windows下hexo&#43;github搭建个人博客</title>
      <link>https://rgozi.com/post/hexo&#43;github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 06 Nov 2016 18:33:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/hexo&#43;github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;p&gt;之前自己的博客也是托管在github上，但是访问速度有时候欠佳，并且缺少个人定制的感觉，所以就放在了自己的云主机上，周末恰巧有个机会让我重新温习一下hexo在github上托管的过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>菜鸟在springboot使用中遇到的问题和解决方法</title>
      <link>https://rgozi.com/post/%E8%8F%9C%E9%B8%9F%E5%9C%A8springboot%E4%BD%BF%E7%94%A8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 21 Sep 2016 08:26:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E8%8F%9C%E9%B8%9F%E5%9C%A8springboot%E4%BD%BF%E7%94%A8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;人的惰性真是可怕啊！
差不多从中秋以来，都一直处于偷懒的状态，基本上没学习什么新东西，这都要归功于暴雪家的魔兽世界和守望先锋了。玩了这么久，是该总结下这段时间遇到的问题和已经找到的解决方法了，省的以后再遇到这些问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>想要走出舒适区</title>
      <link>https://rgozi.com/post/%E6%83%B3%E8%A6%81%E8%B5%B0%E5%87%BA%E8%88%92%E9%80%82%E5%8C%BA/</link>
      <pubDate>Fri, 26 Aug 2016 11:43:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E6%83%B3%E8%A6%81%E8%B5%B0%E5%87%BA%E8%88%92%E9%80%82%E5%8C%BA/</guid>
      <description>&lt;h1 id=&#34;工作一个月的感受&#34;&gt;工作一个月的感受&lt;/h1&gt;
&lt;p&gt;到今天为止，已经入职一个月了，没想到时间过的这么快，想想这个月的生活，我好像已经快要适应现在的生活节奏了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用IDEA和maven快速搭建SpringBoot项目</title>
      <link>https://rgozi.com/post/springboot/</link>
      <pubDate>Thu, 25 Aug 2016 14:32:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/springboot/</guid>
      <description>&lt;p&gt;由于单位项目使用java开发，框架用的spring，之前一直觉得java特别麻烦，所以一直避免和java接触，这下跑不掉了。所以近两周一直在学习java。在此记录一下学习过程，和下一步学习计划。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>最简便的爬虫效率提升方法</title>
      <link>https://rgozi.com/post/multiprocessing.dummy/</link>
      <pubDate>Tue, 02 Aug 2016 09:40:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/multiprocessing.dummy/</guid>
      <description>&lt;p&gt;昨晚发现放在腾讯云主机上通过crontab定时执行用以爬去斗鱼分类页面数据的爬虫在执行的时候速度特别慢，于是想通过多线程来提高效率。
打开浏览器，键入关键字“python 多线程”，发现大多数内容都是使用threading、Queue这些看起来很笨重的实例。不过直到multiprocessing.dummy出现在眼前之后，一切都变得辣么简单。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hack On Douyu -- 4</title>
      <link>https://rgozi.com/post/hackondouyu-4/</link>
      <pubDate>Sun, 31 Jul 2016 15:04:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/hackondouyu-4/</guid>
      <description>&lt;p&gt;原本打算使用&lt;a href=&#34;http://selenium-python.readthedocs.io/&#34;&gt;selenium&lt;/a&gt;给这个小项目做自动化测试的，没成想selenium功能如此强大，那就顺势做个自动抢鱼丸的小工具吧。😊&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hack On Douyu -- 3</title>
      <link>https://rgozi.com/post/hackondouyu-3/</link>
      <pubDate>Wed, 27 Jul 2016 08:07:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/hackondouyu-3/</guid>
      <description>&lt;p&gt;在拥有了数据获取和存储的能力之后，如何利用好这些数据成为一个问题。
本来也一直打算把之前学习的flask框架用起来，现在有了这些数据，我打算利用这些数据做一个对斗鱼网站的小型监控页面。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hack On Douyu -- 2</title>
      <link>https://rgozi.com/post/hackondouyu-2/</link>
      <pubDate>Sat, 23 Jul 2016 22:18:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/hackondouyu-2/</guid>
      <description>&lt;p&gt;在上一篇文章中，主要讲了我获取斗鱼弹幕和某些静态页面的方法，在数据获取到之后，如何有效的组织和存储数据直接关系到后续数据能否可以背有效使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hack On Douyu -- 1</title>
      <link>https://rgozi.com/post/hackondouyu-1/</link>
      <pubDate>Wed, 20 Jul 2016 21:52:12 +0000</pubDate>
      
      <guid>https://rgozi.com/post/hackondouyu-1/</guid>
      <description>&lt;p&gt;距离上次更新又有一段时间了，毕业答辩之后，确实和同学们一起出去嗨了一段时间，由于还没入职，在家清净的环境中可以好好学一下一直感兴趣的东西啦。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>利用redis制作页面访问计数器</title>
      <link>https://rgozi.com/post/%E5%88%A9%E7%94%A8redis%E5%88%B6%E4%BD%9C%E9%A1%B5%E9%9D%A2%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0%E5%99%A8/</link>
      <pubDate>Mon, 05 Oct 2015 22:00:45 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E5%88%A9%E7%94%A8redis%E5%88%B6%E4%BD%9C%E9%A1%B5%E9%9D%A2%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0%E5%99%A8/</guid>
      <description>&lt;p&gt;以前博客的页面计数器使用的是卜算子,使用方法点击&lt;a href=&#34;http://ibruce.info/2015/04/04/busuanzi/&#34;&gt;这里&lt;/a&gt;查看,但是页面在加载的时候，并不是很快,于是自己使用Redis制作了一个简单的页面计数工具。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mongodb副本集在nginx-gridfs中的使用</title>
      <link>https://rgozi.com/post/mongodb%E5%89%AF%E6%9C%AC%E9%9B%86%E5%9C%A8nginx-gridfs%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 17 Aug 2015 22:41:24 +0000</pubDate>
      
      <guid>https://rgozi.com/post/mongodb%E5%89%AF%E6%9C%AC%E9%9B%86%E5%9C%A8nginx-gridfs%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.mongodb.org/&#34;&gt;Mongodb&lt;/a&gt;作为一款非常流行的NOSQL数据库，应用范围非常广泛，它和&lt;a href=&#34;https://github.com/mdirolf/nginx-gridfs&#34;&gt;Nginx-gridfs&lt;/a&gt;组合可以构建性能非常出色的应用。下边简单介绍一下如何搭建这套应用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>php执行服务器端脚本</title>
      <link>https://rgozi.com/post/php%E6%89%A7%E8%A1%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Fri, 14 Aug 2015 14:25:50 +0000</pubDate>
      
      <guid>https://rgozi.com/post/php%E6%89%A7%E8%A1%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E8%84%9A%E6%9C%AC/</guid>
      <description>&lt;h1 id=&#34;遇到的问题&#34;&gt;遇到的问题&lt;/h1&gt;
&lt;p&gt;最近在做一个在客户端进行mongodb数据集选择，然后重写Nginx配置文件，最后重启Nginx的小工具。遇到最大的问题是，现在生成了Nginx配置文件，但是没法重启Nginx，使生成的配置文件即刻生效。
于是想到了一个办法，在服务器上写一个重启Nginx的脚本，使用php来运行这个脚本，客户端通过http访问php来完成Nginx的重启。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>redis的GEO扩展</title>
      <link>https://rgozi.com/post/redisgeo/</link>
      <pubDate>Tue, 11 Aug 2015 14:50:19 +0000</pubDate>
      
      <guid>https://rgozi.com/post/redisgeo/</guid>
      <description>&lt;p&gt;在redis3.2版本中，增加了geohash的扩展，这下可以使用Redis来作更多有意思的事情了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux下程序开机自启动</title>
      <link>https://rgozi.com/post/linux%E4%B8%8B%E7%A8%8B%E5%BA%8F%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8/</link>
      <pubDate>Fri, 07 Aug 2015 14:50:19 +0000</pubDate>
      
      <guid>https://rgozi.com/post/linux%E4%B8%8B%E7%A8%8B%E5%BA%8F%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8/</guid>
      <description>&lt;p&gt;在日常工作中，随着服务器上部署的服务的增多，每次服务器重启之后，都需要逐一将服务启动，这个过程耗时而且麻烦。于是，将一些服务在服务器启动之后自动启动变得很方便。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>服务器端缓存环境配置(三)</title>
      <link>https://rgozi.com/post/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%BC%93%E5%AD%98%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-%E4%B8%89/</link>
      <pubDate>Tue, 04 Aug 2015 09:14:27 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%BC%93%E5%AD%98%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-%E4%B8%89/</guid>
      <description>&lt;h1 id=&#34;nginx的lua扩展&#34;&gt;&lt;strong&gt;nginx的Lua扩展&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;接着上两篇博客，现在开始搭建nginx的LUA和mongodb扩展，完成整个流程的最后一步配置。
Lua是一个可以嵌入到nginx配置文件的动态脚本语言，这样就可以在nginx请求处理的各个阶段执行各种进行逻辑控制的Lua代码。
想要在nginx里边增加lua扩展，需要的模块如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://luajit.org&#34;&gt;luajit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/simpl/ngx_devel_kit&#34;&gt;ngx_devel_kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chaoslawful/lua-nginx-module&#34;&gt;lua_nginx_module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>服务器端缓存环境配置(二)</title>
      <link>https://rgozi.com/post/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%BC%93%E5%AD%98%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-%E4%BA%8C/</link>
      <pubDate>Sun, 02 Aug 2015 19:14:56 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%BC%93%E5%AD%98%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-%E4%BA%8C/</guid>
      <description>&lt;p&gt;上一篇博客讲解了整个缓存流程中数据库部分的搭建，有了最基础的部分，现在可以搭建上层的内容了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>服务器端缓存环境配置</title>
      <link>https://rgozi.com/post/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%BC%93%E5%AD%98%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 31 Jul 2015 23:39:02 +0000</pubDate>
      
      <guid>https://rgozi.com/post/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%BC%93%E5%AD%98%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;h1 id=&#34;原材料&#34;&gt;&lt;strong&gt;原材料&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;正所谓“巧妇难为无米之炊”，在进行服务器端缓存搭建之前，需要将整个流程所需的元素准备好。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nginx.org/&#34; title=&#34;作为Web服务器的存在&#34;&gt;Nginx&lt;/a&gt;作为Web服务器的存在&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mongodb.org/&#34; title=&#34;磁盘数据库&#34;&gt;Mongodb&lt;/a&gt;磁盘数据库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.lua.org/&#34; title=&#34;与Nginx结合，进行服务器端的逻辑控制&#34;&gt;Lua&lt;/a&gt;与Nginx结合，进行服务器端的逻辑控制&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://redis.io/&#34; title=&#34;高速缓存&#34;&gt;Redis&lt;/a&gt;内存数据库，高速缓存&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.php.net/&#34; title=&#34;返回数据库信息给客户端&#34;&gt;PHP&lt;/a&gt;读取磁盘数据库信息，返回给客户端&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
